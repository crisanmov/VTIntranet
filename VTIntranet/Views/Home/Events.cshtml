@using Microsoft.AspNet.Identity
@model VTIntranet.Models.NewModelHelper

<head>
    <title></title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.js"></script>
    <style>
      .buttonlink {
    display: flex;
    align-items: center;
    margin: 2px;
    background-color: #E3E2E6;
    margin-top: 5px;
}
      .row.no-gutters {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin: 0;
}
        #eventos-padre {
    display: grid;
    width: 99%;
    margin: 0 auto;
    grid-template-columns: auto auto;
}
        .col-md-4 {
    padding: 20px 0;
    width: 30%;
}

        
        .buttonlink img {
            height: 80%;
            width: 100%;
        }

        .hovereffect {
            width: 100%;
            height: 100%;
            float: left;
            overflow: hidden;
            position: relative;
            text-align: center;
            cursor: default;
        }

        .hovereffect .overlay {
            width: 100%;
            height: 100%;
            position: absolute;
            overflow: hidden;
            top: 0;
            left: 0;
            padding: 50px 20px;
        }

        .hovereffect img {
            display: block;
            position: relative;
            max-width: none;
            width: calc(100% + 20px);
            -webkit-transition: opacity 0.35s, -webkit-transform 0.35s;
            transition: opacity 0.35s, transform 0.35s;
            -webkit-transform: translate3d(-10px,0,0);
            transform: translate3d(-10px,0,0);
            -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
        }

        .hovereffect:hover img {
            opacity: 0.4;
            filter: alpha(opacity=40);
            -webkit-transform: translate3d(0,0,0);
            transform: translate3d(0,0,0);
        }

        .hovereffect h2 {
            text-transform: uppercase;
            color: #fff;
            text-align: center;
            position: relative;
            font-size: 17px;
            overflow: hidden;
            padding: 0.5em 0;
            background-color: transparent;
        }

        .hovereffect h2:after {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: #fff;
            content: '';
            -webkit-transition: -webkit-transform 0.35s;
            transition: transform 0.35s;
            -webkit-transform: translate3d(-100%,0,0);
            transform: translate3d(-100%,0,0);
        }

        .hovereffect:hover h2:after {
            -webkit-transform: translate3d(0,0,0);
            transform: translate3d(0,0,0);
        }

        .hovereffect a, .hovereffect p {
            color: #FFF;
            opacity: 0;
            filter: alpha(opacity=0);
            -webkit-transition: opacity 0.35s, -webkit-transform 0.35s;
            transition: opacity 0.35s, transform 0.35s;
            -webkit-transform: translate3d(100%,0,0);
            transform: translate3d(100%,0,0);
        }

        .hovereffect:hover a, .hovereffect:hover p {
            opacity: 1;
            filter: alpha(opacity=100);
            -webkit-transform: translate3d(0,0,0);
            transform: translate3d(0,0,0);
        }

        .img-container {
            height: 400px;
            background-color: darkgray;
            overflow: scroll;
            width: 90%;
            margin: 0 auto;
        }

        .img-container img {
            width: 33%;
        }

        #eventos-padre .btn-primary {
            width: 90%;
        }

        .form-control {
            max-width: 100%;
        }

        input#fileEvt{max-width:100%; width:100%}
        input#files {
            width: 100%;
            max-width: 100%;
        }

        



           input[type="checkbox"] { display: none; }

input[type="checkbox"] + label {
  display: block;
  position: relative;
  padding:10px 0 0 20px;
  margin-bottom: 20px;
  font: 14px/20px 'Open Sans', Arial, sans-serif;
  color: #ddd;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

input[type="checkbox"] + label:last-child { margin-bottom: 0; }

input[type="checkbox"] + label:before {
  visibility:hidden;
  width: 20px;
  height: 20px;
  border: 2px solid #122143;
  position: relative;
  left: 0;
  top: 0;
  opacity: .6;
  -webkit-transition: all .12s, border-color .08s;
  transition: all .12s, border-color .08s;
}

input[type="checkbox"]:checked + label:before {
  width: 10px;
  top: -5px;
  left: 5px;
  border-radius: 0;
  opacity: 1;
  border-top-color: transparent;
  border-left-color: transparent;
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
}

 .visible input[type="checkbox"] + label:before
        {
            visibility:visible;
            display:block;
            content:"";
            left:0
        }

 #deletear{
     display:none
 }
 #padredetodo.visible #deletear{display:inline-block}

    </style>
</head>
<div id="padredetodo" class="prueba">

    <h3>@ViewBag.Message</h3>

    <button type="button" class="btn btn-primary" style="margin-left: 1%" id="events">Nuevo Evento</button>
    <button type="button" class="btn btn-primary" style="margin-left: 1%" id="del-img">Seleccionar</button>
    <button id="deletear" class="btn btn-primary" style="margin-left:1%">Eliminar imagenes</button>


    <br />
    <hr />
    <div id="eventos-padre" class="prueba">
        @foreach (var field in ViewBag.events)
        {
            <div class="buttonlink">
                <div class="card mb-3 ">
                    <input type="checkbox" id="/@field.FileName">
                    <label for="/@field.FileName"></label>
                    <div class="row no-gutters" style="display: flex; align-items: center;">
                        <div class="col-xs-12  col-sm-6 col-md-4">
                            <div class="hovereffect">
                                <div class="">
                                    <img class="img-responsive" src="~/UploadedFiles/@field.FileName" alt="">
                                    <div class="overlay">
                                        <p>
                                            <a href="@field.Url" style="color:#122143; font-size:large" target="_blank">CLICK</a>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card-body" style="display: flex; flex-direction: column; justify-content: center;">
                                <h5 class="card-title">@field.Title</h5>
                                <p class="card-text">@field.Description</p>
                                <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-primary addImage" id="@field.IdEvent">Añadir Imagenes</button><br /><br />
                            @Html.ActionLink("Ir al Album", "Album", "Gallery", new { idEvent = @field.IdEvent }, new { @class = "btn btn-primary", @style = "color: white" })
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!--Modal for new event -->
    <div class="modal fade" id="myModal3" role="dialog">
        <div class="modal-dialog" style="">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Nuevo Evento</h4>
                    <div id="validation"></div>
                </div>
                <!--form New Notice-->
                <form method="post" action="/Home/SaveNotice">
                    <div class="modal-body">
                        <div id="validationEvent"></div>
                        <!--title-->
                        <input class="form-control" type="text" placeholder="Titulo" name="title" id="titleEvt">
                        <br />
                        <div class="form-group row">
                            <div class='col-sm-12'>
                                <div class="form-group">
                                    <label for="exampleFormControlTextarea1">Imagen</label>
                                    <input type="file" class="btn btn-default" value="" id="fileEvt" accept="image/*" />
                                </div>
                            </div>
                            <!--Url-->
                            <div class='col-sm-12'>
                                <div class="form-group">
                                    <label for="url">URL</label>
                                    <input class="form-control" type="text" placeholder="insertar URL " id="urlEvt" />
                                </div>
                            </div>
                            <!--description-->
                            <div class='col-sm-12'>
                                <div class="form-group">
                                    <label for="exampleFormControlTextarea1">Descripción</label>
                                    <textarea class="form-control" id="desEvt" rows="6" style="resize: none" name="description"></textarea>
                                </div>
                            </div>
                        </div>
                        <!--save notice-->
                        <div style="text-align:right; padding:30px 5px">
                            <input type="submit" class="btn btn-default" value="Guardar" id="btnSaveEvt" />
                            <!--<button type="button" class="btn btn-default" data-dismiss="modal" id="btnClose">Cerrar</button>-->
                        </div>

                    </div>
                </form>
                <br />
            </div>
        </div>
    </div>

    <!--Modal for add images to album -->
    <div class="container" id="">
        <!-- Modal -->
        <div class="modal fade" id="myModal4" role="dialog">
            <div class="modal-dialog" style="height: 90%">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Agregar imagenes al Album</h4>
                    </div>
                    <br />
                    <input style="margin-left: 5%;width:100%" type="file" id="files" name="files[]" multiple />
                    <hr />
                    <form enctype="multipart/form-data">
                        <div class="img-container">
                            <output id="list"></output>
                        </div>
                        <div style="text-align:right; padding:30px 15px">
                            <input type="submit" class="btn btn-default" value="Guardar" id="btnSaveImg" />
                            <!--<button type="button" class="btn btn-default" data-dismiss="modal" id="btnClose">Cerrar</button>-->
                        </div>
                    </form>

                </div>

            </div>
        </div>
    </div>

</div>
<script>

    var idAlb = 0;

    $('#events').click(function (e) {
        e.preventDefault();
        $('#myModal3').modal('show');
    });

    $('#titleEvt').attr("autocomplete", "off");

    $('#btnSaveEvt').click(function (e) {
        console.log("Entra a guardar evento");
        e.preventDefault();

        if ($('#msgValidate').length) {
            $("p").remove();
        }

        //info event
        let title = $('#titleEvt').val();
        let url = $('#urlEvt').val();
        let description = $('#desEvt').val();


        validateControl(title, url, description);
        let fr = $('#fileEvt').prop('files')[0];
        console.log(fr);

        if (fr === undefined) {
            $('#validation').append("<p id='msgValidate' style='color: red; font-size: 15px'>Debes seleccionar un archivo</p>");
            return;
        }

        let file = $('#fileEvt').prop('files')[0];

        let formData = new FormData();
        formData.append('filePost', file);
        formData.append('title', title);
        formData.append('url', url);
        formData.append('description', description);
        formData.append('isEvent', true);

        console.log(formData.getAll('filePost'));

        saveEvent(formData);

    });

    $('.addImage').click(function (e) {
        e.preventDefault();

        //alert();
        $('#myModal4').modal('show');
        idAlb = $(this).attr('id');

    });

    $('#btnSaveImg').click(function (e) {

        e.preventDefault();

        //let idAlbum = $('.addImage').attr("id");
        //let idAlbum = $(this).attr('id');
        console.log(idAlb);

        //return;


        let fd = new FormData();
        /*-------------------------------------------------------*/ 
        let files = $('#files').prop('files');
        console.log(files.length);

        for (let i = 0; i < files.length; i++) {
            let file = files[i];
            fd.append('filesPost', file);
        }

        fd.append('idAlbum', idAlb);

        saveAlbum(fd);

    });

    $('.close').click(function (e) {
        $modal = $('#myModal4');
        $modal.find('form')[0].reset();
        $('#files').val('');
        $('#list').empty();
    });

    function validateControl(...restArgs) {
        //console.log(restArgs.length);
        let blank = 0;

        for (let i = 0; i < restArgs.length; i++) {
            //validate blank fields
            blank = validateBlank(restArgs[i]);
        }

        if (blank === 1) {
            $('#validation').append("<p id='msgValidate' style='color: red; font-size: 15px'>El formulario no debe tener campos vacios</p>");

            return;
        }
    }

    function validateBlank(...restArgs) {
        for (let i = 0; i < restArgs.length; i++) {
            //console.log(restArgs[i].toString());
            if (restArgs[i] === '') {
                return 1;
            }
        }
    }

    function saveEvent(formData) {

        $.ajax({
            url: "SaveEvent",
            //data: formData ? formData : form.serialize(),
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            type: 'POST',
            success: function (response) {
                if (response.success) {
                    $modal = $('#myModal3');
                    $modal.find('form')[0].reset();
                    $('#myModal3').modal('hide');
                    location.reload();
                }
            }

        });
    }

    function saveAlbum(fd) {

        $.ajax({
            url: "SaveAlbum",
            //data: formData ? formData : form.serialize(),
            data: fd,
            cache: false,
            contentType: false,
            processData: false,
            type: 'POST',
            success: function (response) {
                console.log(response);
                if (response.success) {

                    $('#myModal4').modal('hide');
                    $modal = $('#myModal4');
                    $modal.find('form')[0].reset();
                    $('#files').val('');
                    $('#list').empty();
                }
            }
        });
    }

    function handleFileSelect(evt) {
        var files = evt.target.files; // FileList object

        // Loop through the FileList and render image files as thumbnails.
        for (var i = 0, f; f = files[i]; i++) {

            // Only process image files.
            if (!f.type.match('image.*')) {
                continue;
            }

            var reader = new FileReader();

            // Closure to capture the file information.
            reader.onload = (function (theFile) {
                return function (e) {
                    // Render thumbnail.
                    var span = document.createElement('span');
                    span.innerHTML = ['<img class="thumb" src="', e.target.result,
                        '" title="', escape(theFile.name), '"/>'].join('');
                    document.getElementById('list').insertBefore(span, null);
                };
            })(f);

            // Read in the image file as a data URL.
            reader.readAsDataURL(f);
        }
    }

    document.getElementById('files').addEventListener('change', handleFileSelect, false);

     $('#del-img').click(function () {

                var x = document.getElementById("padredetodo");
                if (x.className === "prueba") {
                    x.className += " visible";
                } else {
                    x.className = "prueba";
                }
                
            });


</script>
