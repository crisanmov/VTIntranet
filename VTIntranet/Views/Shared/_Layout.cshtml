@model IEnumerable<VTIntranet.Models.Tag>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - VTIntranet Application</title>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Contents/bootstrap-datepicker.min.css" rel="stylesheet" />
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <!--Awesome Icons-->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
    <!--Calendar-->
    <link href='~/Scripts/calendar/packages/core/main.css' rel='stylesheet' />
    <link href='~/Scripts/calendar/packages/daygrid/main.css' rel='stylesheet' />
    <script src='~/Scripts/calendar/packages/core/main.js'></script>
    <script src='~/Scripts/calendar/packages/interaction/main.js'></script>
    <script src='~/Scripts/calendar/packages/daygrid/main.js'></script>
    
    <style>
        .nav li div ul li:hover, .nav li div ul li:hover a {
    background: #ddd;
    color: #122143 !important;
}
        .nav li div ul li a:hover {
            text-decoration: none;
        }
        .nav > li > a:focus, .nav > li > a:hover {
            background-color: transparent !important;

        }
        #nav_home2 li:hover {
            border-left: 8px solid #ddd;
        }
        #nav_home li:hover >a {
            border-left: 8px solid #ddd;
        }
        #nav_home li:first-child a{
            border: none !important;
        }

        .nav > li > a{padding:15px !important}
        .container {
            width: 100% !important;
            padding: 0 !important;
            margin: 0 !important;
        }

        form.form-inline.my-2.my-lg-0 {
            position: relative;
            right: 0;
            top: 10px;
            padding-left: 30px;
        }

        p {
            margin: 0 !important
        }

        .navbar-brand {
            width: 100%
        }

        .navbar-fixed-top {
            background: #fff;
        }

        .navbar-header {
            float: none !important
        }

        body {
            padding: 0 !important
        }

        .navbar-fixed-top {
            position: inherit !important
        }

        .container {
            display: flex;
            background: #f5f5f5;
        }

        #container-left {
            min-width: 200px;
            background: #21356a;
            max-height: 100vh;
            position: fixed;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        #container-right {
            background: #f5f5f5;
            min-height: 100vh !important
        }

        .nav.navbar-nav li a {
            font-size: 13px;
            font-weight: 800;
            color:#21356a
        }
        .fc-view-container{background:#fff}

    #nav_home.nav > li > a {
    padding:15px 0px 15px 35px!important
}
    #nav_home2 > li > a {
    padding: 15px 10px !important;
}
    .nav.flex-column>li img {
    width: 30px;
}
      div#divusers * {
        color: #000 !important;
        padding: 0 5px
      }

        .box-comment {
            height: 45px;
        }
        p {
            margin: 0
        }

        .fas {
            color: #fff
        }

        #personitos {
            margin-top: 30px
        }

        div.hr {
            height: 2px;
            background: blue;
        }

        .col-4 {
            border: 1.5px solid green;
            position: absolute;
            bottom: 0;
            right: 0;
            height: 60px;
            overflow: hidden;
        }

        .box-title {
            font-size: 12px;
            color: #fff;
            margin: 0;
            padding: 0;
        }

        #chat {
            background: #f0f0f0;
            width: 270px;
            height: 40px;
            position: fixed;
            bottom: 0;
            right: 5px;
            overflow: hidden;
            z-index: 50
        }

        #chat-closed {
            display: none;
            justify-content: space-around;
            position: fixed;
            width: 270px;
            background: #21356a;
            align-items: center;
            height: 40px;
            cursor: pointer;
             font-size: 20px;
        }

        #chat-open {
           display: flex;
    justify-content: space-around;
    align-items: center;
    height: 100%;
    background: #21356a;
    cursor: pointer;
    font-size: 20px;
        }
        #chat-open img,#chat-closed img {
    margin-right: 15px;
}
        .modal-footer {
            position: absolute;
            bottom: 0;
            right: 270px;
            border: 0;
            padding: 0 10px
        }

        #PriChatDiv > div {
            max-width: 250px;
            width: 250px;
            padding: 1px;
        }

        #PriChatDiv {
            flex-wrap: nowrap;
        }

        .box {
            margin-bottom: 0
        }

        #PriChatDiv {
            flex-wrap: wrap;
            display: flex;
            z-index: 2;
        }

        .modal-footer {
            padding: 0 !important;
            text-align: right;
            border-top: 1px solid #e5e5e5;
            z-index: 5;
            position: fixed
        }

        #divusers .fa-paw {
            color: #32c722 !important;
        }

        #carousel_ul li img {
            width: 100% !important;
            height: auto !important
        }

        #gallery {
            max-height: 410px !important
        }

        #carousel_ul li {
            width: 32% !important;
            height: auto !important
        }

        .navbar-nav {
            display: flex;
            justify-content: space-between;
            width: 100%
        }

        .navbar-right {
            margin-right: 0 !important;
        }

        #row1 {
            max-height: 500px;
            overflow: auto;
        }

        #left_scroll, #right_scroll {
            float: left;
            height: 130px;
            width: 35px;
            margin-top: 50px;
            margin-left: 20px;
        }

        #left_scroll img, #right_scroll img {
            border: 0;
            /* remove the default border of linked image */
            /*styling*/
            cursor: pointer;
        }

        #left_scroll img {
            width: 25px;
            height: 25px;
        }

        #right_scroll img {
            width: 25px;
            height: 25px;
        }

        .container > div:last-child {
            width: 100%;
        }

        .navbar-nav {
            background: #fff
        }

        #sub-menu{background:#fff; list-style:none; position:absolute;top:50px; padding: 5px; width:120px; display: none}
        #hov-menu:hover #sub-menu{display:block}
     
        #sub-menu a {
            padding: 5px !important; background: #fff !important
        }

        #sub-menu .navbar-right{float:none !important}
        #sub-menu .nav.navbar-nav.navbar-right:before {
            content: none !important;
        }

        input[type="search"]{
            border-radius: 20px; color:#fff;
                background: url(../../UploadedFiles/Intranet_Buscar.png) #21356a no-repeat 10px center;
    background-size: 20px;
    text-indent: 40px;

        }

        ::placeholder{color:#fff !important}

        #nav_home li:hover div, #nav_home li:active div {
            display: block !important;
        }
        .nav > li > a, .nav > li > div > ul > li {
            position: relative;
            display: block;
            padding: 10px 15px 10px 60px;
        }
        .nav > li > div > ul {
            background: #122143;
            padding:0
        }
        #nav_home>li {
    border-bottom: 1px solid #122143;
}
         #nav_home2>li
         {
        display: flex;
    align-items: center;
    padding-left: 30px;
    border-top: 1px solid #21356a;
}
         #UserCount{display:none}
        
         .fc-unthemed td.fc-today {
    background: #737f8a;
}
       #row2 a {
    color: #21356a;
}
       #row2 td.fc-day-top.fc-tue.fc-today a {
    color: #fff;
}
       #add-dates img, .tags {
    cursor: pointer;
}
       footer {
    text-align: center;
    font-size:20px;
}
       footer span{color:deeppink}

       #container-left a {
    color: #fff;
}
       #filePdf{max-width:100%; width:100%}
    </style>

    <!--CHAT-->
    <!--<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">-->
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/style.css" rel="stylesheet" />
    <!--<link href="~/Content/font-awesome.css" rel="stylesheet" />-->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">

    <script>
        function myFunction() {
            document.getElementById("chat-open").style.display = "none";
            document.getElementById("chat-closed").style.display = "flex";
            document.getElementById("chat").style.height = "80vh";
            document.getElementById("chat").style.overflow = "auto";
            document.getElementById("divusers").style.display = "block";
        }

        function myFunction1() {
            document.getElementById("chat-open").style.display = "flex";
            document.getElementById("chat-closed").style.display = "none";
            document.getElementById("chat").style.height = "40px";
            document.getElementById("chat").style.overflow = "hidden";
            document.getElementById("divusers").style.display = "none";
        }

    </script>

</head>
<body class="body-font-size-sm">

    <!--<div>
        @Html.Action("Navbar", "utilsapp")
    </div>-->

    <div class="container">
        <div id="container-left">
            <ul class=" nav flex-column" id="nav_home" style="color: white; background-color: #21356a;  ">
                <li>
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>

                        @Html.ActionLink("VT INTRANET", "Index", "Home", new { area = "" }, new { @class = "navbar-brand", @style = "background-color: #21356a; color: white;text-align: center" })
                    </div>
                </li>
                <!--foreach-->
            </ul>
            <ul class=" nav flex-column" id="nav_home2" style="color: white !important; background-color: #122143;">
                <li><img src="~/UploadedFiles/Intranet_Eventos.png">@Html.ActionLink("Eventos", "Events", "Home", null, new { style = "color: white" })</li>
                <li><img src="~/UploadedFiles/Intranet_Galeria.png">@Html.ActionLink("Galeria", "Index", "Gallery", null, new { style = "color: white" })</li>
                <li><img src="~/UploadedFiles/Intranet_Subir-Manual.png"><a id="uploadFile" style="color:white">Subir Manual</a></li>
            </ul>
        </div>
        <div style="margin-left:200px">
            <div id="container-right">
                <div class=" navbar-fixed-top">
                    <div class="container">
                        <div class="navbar-collapse collapse" style=" width: 100%; position: relative; z-index:1; overflow:auto">
                            <ul class="nav navbar-nav">
                                <li>@Html.ActionLink("¿Quienes Somos?", "About", "Home")</li>
                                <li>@Html.ActionLink("Very Talent", "Talend", "Home")</li>
                                <li>@Html.ActionLink("Voluntariado", "Volunteer", "Home")</li>
                                <li>
                                    <form class="form-inline my-2 my-lg-0" style="padding-left:0">
                                        <input id="buscar-menu" class="form-control mr-sm-2" type="search" placeholder="Buscar" aria-label="Search">
                                    </form>
                                </li>
                                <li id="hov-menu" style="display:flex; align-items:center">
                                    <i class="material-icons" style="font-size:40px; color:#21356a">
                                        account_circle
                                    </i>
                                    <div id="sub-menu">
                                        @Html.ActionLink("Mi Perfil", "Profile", "Home")

                                        @Html.Partial("_LoginPartial")
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <!-- Modal new File -->
                <div class="modal fade" id="uploadFileModal" role="dialog">
                    <div class="modal-dialog" style="">
                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 id="titleModalManual" class="modal-title">Agregar Nuevo manual</h4>
                                <div id="validation"></div>
                            </div>
                            <!--form New File-->
                            <form method="post" action="/Home/SavePdf">
                                <div class="modal-body">
                                    <div id="validationPdf"></div>
                                    <!--title-->
                                    <label for="FormControlPdf">Nombre del Manual</label>
                                    <input class="form-control" type="text" placeholder="Titulo" name="title" id="titlePdf">
                                    <br />
                                    <!--name tag-->
                                    <div class="form-group">
                                        <label for="FormControlTag">Empresa</label>
                                        <select class="form-control" id="FormControlTag">
                                            <option value="seleccion">Selecciona una opción...</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label for="FormControlDepto">Departamento</label>
                                        <select class="form-control" id="FormControlDepto">
                                            <option value="seleccion">Selecciona una opción...</option>
                                        </select>
                                    </div>
                                    <div class="form-group row">
                                        <div class='col-sm-12'>
                                            <div class="form-group">
                                                <label for="exampleFormControlTextarea1">Archivo</label>
                                                <input type="file" class="btn btn-default" value="" id="filePdf" accept="application/pdf" />
                                            </div>
                                        </div>
                                    </div>
                                    <!--save PDF-->
                                    <div style="text-align:center; padding:0 5px">
                                        <input type="submit" class="btn btn-default" value="Guardar" id="btnSavePdf" />
                                        <!--<button type="button" class="btn btn-default" data-dismiss="modal" id="btnClose">Cerrar</button>-->
                                    </div>

                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class=" ">
                    @RenderBody()
                </div>
                <div class="">
                    <hr />
                    <footer>
                        <p>&copy; @DateTime.Now.Year - VT Intranet Made with ♥ By <span>Development Department. </span></p>
                    </footer>
                </div>
            </div>
        </div>
    </div>
    <!--CHAT-->
    <div class="row">
        <div class="col-8" style="display:none">
            <div style="">
                <h2><span id='spanUser' style="visibility:hidden"></span></h2>
                <input id="hdId" type="hidden" />

                <input id="hdUserName" type="hidden" />
            </div>
        </div>
        <div id="chat" style="border: .5px solid #000">
            <div id="chat-open" class="box-title" onclick="myFunction()"><div> <img src="~/UploadedFiles/Intranet_Chat.png" width="25" />Chat </div><span id='UserCount'></span><i id="open-chat" class="fas fa-chevron-up"></i></div>
            <div id="chat-closed" class="box-title" onclick="myFunction1()"> <div><img src="~/UploadedFiles/Intranet_Chat.png" width="25" /> Chat</div><span id='UserCount'></span> <i id="close-chat" class="fas  fa-chevron-down"></i></div>
            <hr />
            <div class="" id="divusers"></div>
        </div>
        <div class="modal-footer" ;>
            <div class="col-md-12">
                <div class="row" id="PriChatDiv"></div>
                <!--/.private-chat -->
            </div>
        </div>
    </div>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/moment.js"></script>
    <script src="~/Scripts/notify.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/intranet/intranet.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/intranet/intranet.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script>

        let array = "@ViewBag.Navbar";
        let json = JSON.parse(array.replace(/&quot;/g, '"'));
        let menuInfo = {};
        let brands = [];

        //console.log(json);
        brands = getBrands(json);
        //console.log(brands);
        brands = findDuplicateValues(brands);
        //console.log(brands);
        menuInfo = getBrandDepto(json, brands);
        createMenu(menuInfo);

        jQuery(document).ready(function ($) {

            var tags = $('.tags');
            var contenedor = $("#container-right").height();

            setEventClick(tags);

            $("#container-left").css("height", contenedor);

            $('#uploadFile').click(function () {
                //alert('push');
                $('#uploadFileModal').modal('show');
                //console.log(brands);
                populateListTag();
                
            });

            $('#FormControlTag').change(function (e) {
                let brand = ($(this).val());
                populateListDepto(brand);
            });

            $('#btnSavePdf').click(function (e) {
                console.log('btnSavePdf');
                e.preventDefault();
                //validate form

                let formData = new FormData();
                let title = $('#titlePdf').val();
                let brand_clabe = $('#FormControlTag').val();
                let depto_clabe = $('#FormControlDepto').val();
                let fileClabe = brand_clabe + '-' + depto_clabe;
                let files = $('#filePdf').prop('files');

                for (let i = 0; i < files.length; i++) {
                    let file = files[i];
                    //console.log("****FOR***");
                    //console.log(file);
                    formData.append('attachmentPost', file);
                }

                //console.log(formData.getAll('attachmentPost'));

                formData.append('title', title)
                formData.append('brandClabe', brand_clabe);
                formData.append('deptoClabe', depto_clabe);
                formData.append('fileClabe', fileClabe);
                console.log(title);
                console.log(fileClabe);
                
                
                saveManual(formData);
            });


        });

        function clearSelect() {

            let select_length = $('#FormControlDepto option').length;

            if (select_length > 1) {
                $('#FormControlDepto option').each(function () {
                    if ($(this).val() != 'seleccion') {
                        $(this).remove();
                    }
                });
            }
        }

        function createMenu(menuInfo) {
            //console.log(menuInfo);
            let nav_home = document.querySelector('#nav_home');
            let subMenu;

            for (field in menuInfo) {
                
                let li = document.createElement('li');
                let a = document.createElement('a');
                let clabe = menuInfo[field][0].tagClabe;

                a.style.color = 'white';
                a.innerHTML = field;
                a.setAttribute('class', 'tags');
                a.setAttribute('value', clabe);
                li.append(a);               
                nav_home.append(li);

                let item = menuInfo[field];
                subMenu = createSubMenu(field, item);
                //console.log(subMenu);
                li.append(subMenu);
               
            }
        }

        function createSubMenu(field, item) {
           
            let submenu = document.createElement('div');
            submenu.setAttribute('id', field);
            let ul = document.createElement('ul');

            for (let i = 0; i < item.length; i++) {
                let li = document.createElement('li');
                let a = document.createElement('a');
                a.setAttribute('href', 'example.com');
                a.innerHTML = item[i].deptoName;
                li.appendChild(a);
                //li.innerHTML = item[i].deptoName;
                //li.setAttribute('id', item[i].idDepto);
                ul.appendChild(li);
            }

            submenu.appendChild(ul);
            submenu.style.display = 'none';
            

            return submenu;

        }

        function setEventClick(tags) {
            //console.log("set listener click");
            
            for (let i = 0; i < tags.length; i++) {
                
                $(tags[i]).click(function (e) {
                    console.log($(this));
                    
                    let clabe = $(this)[0].attributes[1].nodeValue;
                    let tag = '/Home/Attachment/?tag=' + clabe;
                    //tag = tag.replace(/ /g, '%20');
                    console.log("");
                    $(tags[i]).attr('href', tag);

                    /*let tag = '/Home/Attachment/?tag=' + $(this)[0].innerHTML;
                     * tag = tag.replace(/ /g, '%20');
                     $(tags[i]).attr('href', tag);*/
                    
                });
            }

        }

        function findDuplicateValues(array) {
            let object = {};
            let result = [];

            //found number coincidences
            array.forEach(function (item) {
                if (!object[item])
                    object[item] = 0;
                object[item] += 1;
            });

            //create array of results coincidences
            for (let prop in object) {
                if (object[prop] >= 1) {
                    result.push(prop);
                }
            }
            return result;
        }

        function getBrands(array) {
            //console.log(array);
            let brands = [];
            for (let i = 0; i < array.length; i++) {
                brands.push(array[i].TagName);
            }
 
            return brands;
        }

        function getBrandDepto(brands_raw, brands) {
            let object = {};
            for (let i = 0; i < brands.length; i++) {
                let deptos = [];
                let ban = brands[i];
                for (let j = 0; j < brands_raw.length; j++) {
                    let brand = brands_raw[j].TagName;
                    if (brand === ban) {
                        //build elements for json
                        let depto = { idTag: brands_raw[j].IdTag, tagClabe: brands_raw[j].Clabe, idDepto: brands_raw[j].IdDepto, deptoName: brands_raw[j].DeptoName };
                        deptos.push(depto);
                    }
                }
                object[ban] = deptos;
                deptos = [];
            }
            //console.log(object);
            return object;
        }

        function populateListDepto(brand) {

            $.ajax({
                url: 'GetDeptos/?brand=' + brand,
                dataType: 'json',
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                asyn: 'true',
                processData: 'false',
                cache: 'false',
                success: function (data) {

                    clearSelect();

                    let json = JSON.parse(data);
                    //console.log(json);
                    selectDepto = document.querySelector('#FormControlDepto');

                    for (let i = 0; i < json.length; i++) {
                        let option = document.createElement('option');
                        option.innerHTML = json[i].DeptoName;
                        option.setAttribute('value', json[i].Clabe);
                        selectDepto.append(option);
                    }



                },
                error: function (e) {

                }
            });
        }

        function populateListTag() {

            $.ajax({
                url: 'GetTags',
                dataType: 'json',
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                asyn: 'true',
                processData: 'false',
                cache: 'false',
                success: function (data) {

                    let json = JSON.parse(data);
                    console.log(json);
                    //let options = [];
                    selectTag = document.querySelector('#FormControlTag');
                    
                    for (let i = 0; i < json.length; i++) {
                        let option = document.createElement('option');
                        option.innerHTML = json[i].tagName;
                        option.setAttribute('value', json[i].clabe);
                        option.setAttribute('id', json[i].idTag);
                        selectTag.append(option);
                    }
                },
                error: function (e) {

                }
            });
        
        }

        function saveManual(fd) {

            $.ajax({
                url: "SaveFilePdf",
                data: fd,
                cache: false,
                contentType: false,
                processData: false,
                type: 'POST',
                success: function (response) {
                    console.log(response);
                    /*if (response.success) {

                        $('#myModal4').modal('hide');
                        $modal = $('#myModal4');
                        $modal.find('form')[0].reset();
                        $('#files').val('');
                        $('#list').empty();
                    }*/
                }
            });
        }

     
    </script>

    <!--**************CHAT*************-->
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/Scripts/date.format.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script>
        var IntervalVal;
        $(function () {
            //console.log("Entra a function");
            // Declare a proxy to reference the hub.
            var chatHub = $.connection.chatHub;

            //console.log(chatHub);
            registerClientMethods(chatHub);
            // Start Hub
            $.connection.hub.start().done(function () {
                //console.log("connection.hub.start()");
                registerEvents(chatHub)

            });

            // Reset Message Counter on Hover
            $("#divChatWindow").mouseover(function () {
                $("#MsgCountMain").html('0');
                $("#MsgCountMain").attr("title", '0 New Messages');
            });

            // Stop Title Alert
            window.onfocus = function (event) {
                if (event.explicitOriginalTarget === window) {

                    clearInterval(IntervalVal);
                    document.title = 'SignalR Chat App';
                }
            }

        });

        // Show Title Alert
        function ShowTitleAlert(newMessageTitle, pageTitle) {
            if (document.title == pageTitle) {
                document.title = newMessageTitle;
            }
            else {
                document.title = pageTitle;
            }
        }

        //registerEvents
        function registerEvents(chatHub) {

            //console.log("Entra a registerEvents");
            var name = "@ViewBag.UserName";
            //console.log("name: " + name);

            if (name.length > 0) {
                chatHub.server.connect(name);

            }

            // Clear Chat
            $('#btnClearChat').click(function () {
                var msg = $("#divChatWindow").html()
                if (msg.length > 0) {
                    chatHub.server.clearTimeout();
                    $('#divChatWindow').html('');

                }
            });

            // Send Button Click Event
            $('#btnSendMsg').click(function () {
                console.log("$('#btnSendMsg').click");
                var msg = $("#txtMessage").val();

                if (msg.length > 0) {

                    var userName = $('#hdUserName').val();

                    var date = GetCurrentDateTime(new Date());

                    chatHub.server.sendMessageToAll(userName, msg, date);
                    $("#txtMessage").val('');
                }
            });

            // Send Message on Enter Button
            $("#txtMessage").keypress(function (e) {
                console.log("keypress");
                if (e.which == 13) {
                    $('#btnSendMsg').click();
                }
            });
        }

        //registerClientMethods
        function registerClientMethods(chatHub) {
            //console.log("registerClientMethods");
            // Calls when user successfully logged in
            chatHub.client.onConnected = function (id, userName, allUsers, messages, times) {

                //console.log(id);
                //console.log(userName);
                //console.log(allUsers);
                //console.log(messages);

                $('#hdId').val(id);
                $('#hdUserName').val(userName);
                $('#spanUser').html(userName);

                // Add All Users
                for (i = 0; i < allUsers.length; i++) {

                    AddUser(chatHub, allUsers[i].ConnectionId, allUsers[i].UserName, allUsers[i].LoginTime);
                }

                // Add Existing Messages
                for (i = 0; i < messages.length; i++) {
                    AddMessage(messages[i].UserName, messages[i].Message, messages[i].Time);

                }
            }

            // On New User Connected
            chatHub.client.onNewUserConnected = function (id, name, loginDate) {
                //console.log("chatHub.client.onNewuserConnected");
                AddUser(chatHub, id, name, loginDate);
            }

            // On User Disconnected
            chatHub.client.onUserDisconnected = function (id, userName) {
                console.log("chatHub.client.onUserDisconnected");
                $('#Div' + id).remove();

                var ctrId = 'private_' + id;
                $('#' + ctrId).remove();

                var disc = $('<div class="disconnect">"' + userName + '" logged off.</div>');

                $(disc).hide();
                $('#divusers').prepend(disc);
                $(disc).fadeIn(200).delay(2000).fadeOut(200);
    }

            // messageReceived
            chatHub.client.messageReceived = function (userName, message, time) {
                console.log("chatHub.client.messageRecived");
                AddMessage(userName, message, time);

                // Display Message Count and Notification
                var CurrUser1 = $('#hdUserName').val();
                if (CurrUser1 != userName) {

                    var msgcount = $('#MsgCountMain').html();
                    msgcount++;
                    $("#MsgCountMain").html(msgcount);
                    $("#MsgCountMain").attr("title", msgcount + ' New Messages');
                    var Notification = 'New Message From ' + userName;
                    IntervalVal = setInterval("ShowTitleAlert('SignalR Chat App', '" + Notification + "')", 800);

                }
            }

            // sendPrivateMessage
            chatHub.client.sendPrivateMessage = function (windowId, fromUserName, message, CurrentDateTime) {

                var ctrId = 'private_' + windowId;
                if ($('#' + ctrId).length == 0) {

                    OpenPrivateChatBox(chatHub, windowId, ctrId, fromUserName);

                }

                var CurrUser = $('#hdUserName').val();
                var Side = 'right';
                var TimeSide = 'left';

                if (CurrUser == fromUserName) {
                    Side = 'left';
                    TimeSide = 'right';

                }
                else {
                    var Notification = 'New Message From ' + fromUserName;
                    IntervalVal = setInterval("ShowTitleAlert('SignalR Chat App', '" + Notification + "')", 800);

                    var msgcount = $('#' + ctrId).find('#MsgCountP').html();
                    msgcount++;
                    $('#' + ctrId).find('#MsgCountP').html(msgcount);
                    $('#' + ctrId).find('#MsgCountP').attr("title", msgcount + ' New Messages');
                }

                var divChatP = '<div class="direct-chat-msg ' + Side + '">' +
                    '<div class="direct-chat-info clearfix">' +
                    '<span class="direct-chat-name pull-' + Side + '"><strong>' + fromUserName + '</strong></span>' +
                    '<span class="direct-chat-timestamp pull-' + TimeSide + '"">' + CurrentDateTime + '</span>' +
                    '</div>' +
                    ' <div class="direct-chat-text" >' + message + '</div> </div>';

                $('#' + ctrId).find('#divMessage').append(divChatP);

                var htt = $('#' + ctrId).find('#divMessage')[0].scrollHeight;
                /*$('#' + ctrId).find('#divMessage').slimScroll({
                    height: htt
                });*/
            }


        }

        function GetCurrentDateTime(now) {
            console.log("entra a GetCurrentDate");
            var localdate = dateFormat(now, "dddd, mmmm dS, yyyy, h:MM:ss TT");
            console.log("QQQQQQQQQQQQQQQQQQQQQQQ");
            console.log(localdate);
            return localdate;
        }

        function AddUser(chatHub, id, name, date) {

            var userId = $('#hdId').val();

            var code, Clist;
            if (userId == id) {

                code = $('<div class="box-comment">' +
                    ' <div class="comment-text">' +
                    '<span class="username"><i class="fas fa-paw"></i>' + name + '<span class="text-muted pull-right">' + date + '</span>  </span></div></div>');


                Clist = $(
                    '<li style="background:#fff;">' +
                    '<a href="#">' +
                    ' <div class="contacts-list-info">' +
                    ' <span class="contacts-list-name" id="' + id + '">' + name + ' <small class="contacts-list-date pull-right">' + date + '</small> </span>' +
                    ' <span class="contacts-list-msg"></span></div></a > </li >');

            }
            else {

                code = $('<div class="box-comment" id="Div' + id + '">' +
                    ' <div class="comment-text">' +
                    '<span class="username"><i class="fas fa-paw"></i>' + '<a id="' + id + '" class="user" >' + name + '<a>' + '<span class="text-muted pull-right">' + date + '</span>  </span></div></div>');

                Clist = $(
                    '<li>' +
                    '<a href="#">' +
                    ' <div class="contacts-list-info">' +
                    '<span class="contacts-list-name" id="' + id + '">' + name + ' <small class="contacts-list-date pull-right">' + date + '</small> </span>' +
                    ' <span class="contacts-list-msg"></span></div></a > </li >');

                var UserLink = $('<a id="' + id + '" class="user" >' + name + '<a>');
                $(code).click(function () {

                    var id = $(UserLink).attr('id');

                    if (userId != id) {
                        var ctrId = 'private_' + id;
                        OpenPrivateChatBox(chatHub, id, ctrId, name);

                    }

                });

                var link = $('<span class="contacts-list-name" id="' + id + '">');
                $(Clist).click(function () {

                    var id = $(link).attr('id');

                    if (userId != id) {
                        var ctrId = 'private_' + id;
                        OpenPrivateChatBox(chatHub, id, ctrId, name);

                    }

                });

            }

            $("#divusers").append(code);

            $("#ContactList").append(Clist);

        }

        function AddMessage(userName, message, time) {

            var CurrUser = $('#hdUserName').val();
            var Side = 'right';
            var TimeSide = 'left';

            if (CurrUser == userName) {
                Side = 'left';
                TimeSide = 'right';

            }

            var divChat = '<div class="direct-chat-msg ' + Side + '">' +
                '<div class="direct-chat-info clearfix">' +
                '<span class="direct-chat-name pull-' + Side + '">' + '' + '</span>' +
                '<span class="direct-chat-timestamp pull-' + TimeSide + '"">' + time + '</span>' +
                '</div>' +
                ' <div class="direct-chat-text" >' + message + '</div> </div>';

            $('#divChatWindow').append(divChat);

            var height = $('#divChatWindow')[0].scrollHeight;
            $('#divChatWindow').scrollTop(height);

        }

        // Creation and Opening Private Chat Div
        function OpenPrivateChatBox(chatHub, userId, ctrId, userName) {
            console.log("OpenPrivateChatBox");
            console.log(chatHub);
            console.log(userId);
            console.log(ctrId);
            console.log(userName);
            var PWClass = $('#PWCount').val();

            if ($('#PWCount').val() == 'info')
                PWClass = 'danger';
            else if ($('#PWCount').val() == 'danger')
                PWClass = 'warning';
            else
                PWClass = 'info';

            $('#PWCount').val(PWClass);
            var div1 = '<div  id="' + ctrId + '" class="box box-solid box-' + PWClass + ' direct-chat direct-chat-' + PWClass + '">' +
                '<div class="box-header with-border">' +
                ' <h3 class="" align="left">' + userName + '</h3>' +
                ' <div class="box-tools pull-right">' +
                ' <span data-toggle="tooltip" id="MsgCountP" title="0 New Messages" class="badge bg-' + PWClass + '">0</span>' +
                ' <button class="minimizar" type="button" class="btn btn-box-tool" data-widget="collapse">' +
                '    <i class="fa fa-minus"></i>' +
                '  </button>' +
                '  <button class="imgDelete" type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button></div></div>' +
                ' <div class="box-body">' +
                ' <div id="divMessage" class="direct-chat-messages">' +
                ' </div>' +
                '  </div>' +
                '  <div class="box-footer">' +
                '    <input type="text" id="txtPrivateMessage" name="message" placeholder="Type Message ..." class="form-control"  />' +
                '  <div class="input-group">' +
                '    <input type="text" name="message" placeholder="Type Message ..." class="form-control" style="visibility:hidden;" />' +
                '   <span class="input-group-btn">' +
                '          <input type="button" id="btnSendMessage" class="btn btn-' + PWClass + ' btn-flat" value="send" />' +
                '   </span>' +
                '  </div>' +

                ' </div>' +
                ' </div>';


            console.log(div1);
            var $div = $(div1);

            // Closing Private Chat Box
            $div.find('.imgDelete').click(function () {
                $('#' + ctrId).remove();
            });

                // Closing Private Chat Box
            $div.find('.minimizar').click(function () {
                $('#' + ctrId).css("display","none");
            });

            // Send Button event in Private Chat
            $div.find("#btnSendMessage").click(function () {

                $textBox = $div.find("#txtPrivateMessage");

                var msg = $textBox.val();
                if (msg.length > 0) {
                    chatHub.server.sendPrivateMessage(userId, msg);
                    $textBox.val('');
                }
            });

            // Text Box event on Enter Button
            $div.find("#txtPrivateMessage").keypress(function (e) {
                if (e.which == 13) {
                    $div.find("#btnSendMessage").click();
                }
            });

            // Clear Message Count on Mouse over
            $div.find("#divMessage").mouseover(function () {

                $("#MsgCountP").html('0');
                $("#MsgCountP").attr("title", '0 New Messages');
            });

            // Append private chat div inside the main div
            $('#PriChatDiv').append($div);
        }

    </script>
    <!--Menu dynamic-->
    <script>
        
        
    </script>

    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")*@
    @RenderSection("scripts", required: false)

</body>
</html>
